
@article{badulescuCryptfsStackableVnode1998,
  title = {Cryptfs: {{A Stackable Vnode Level Encryption File System}}},
  shorttitle = {Cryptfs},
  author = {Badulescu, Ion and Shender, Alex and Zadok, Erez},
  date = {1998},
  doi = {10.7916/D82N5935},
  url = {https://doi.org/10.7916/D82N5935},
  urldate = {2022-03-04},
  abstract = {Data encryption has become an increasingly important factor in everyday work. Users seek a method of securing their data with maximum comfort and minimum additional requirements on their part; they want a security system that protects any files used by any of their applications, without resorting to application-specific encryption methods. Performance is an important factor to users since encryption can be time consuming. Operating system vendors want to provide this functionality but without incurring the large costs of developing a new file system. This paper describes the design and implementation of Cryptfs -- a file system that was designed as a stackable Vnode layer loadable kernel module. Cryptfs operates by 'encapsulating' a client file system with a layer of encryption transparent to the user. Being kernel resident, Cryptfs performs better than user-level or NFS based file servers such as CFS and TCFS. It is 2 to 37 times faster on micro-benchmarks such as read and write; this translates to 12-52\textbackslash\%application speedup, as exemplified by a large build. Cryptfs offers stronger security by basing its keys on process session IDs as well as user IDs, and by the fact that kernel memory is harder to access. Working at and above the vnode level, Cryptfs is more portable than a file system which works directly with native media such as disks and networks. Cryptfs can operate on top of any other native file system such as UFS/FFS and NFS. Finally, Cryptfs requires no changes to client file systems or remote servers.},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/2L7RSL3J/Badulescu m. fl. - 1998 - Cryptfs A Stackable Vnode Level Encryption File S.pdf;/Users/glenn/Zotero/storage/NHTXNRM8/D82N5935.html}
}

@inproceedings{baliga2007web,
  title = {A Web Based Covert File System.},
  booktitle = {{{HotOS}}},
  author = {Baliga, Arati and Kilian, Joe and Iftode, Liviu},
  date = {2007}
}

@software{buchananTweetablepolyglotpng2022,
  title = {Tweetable-Polyglot-Png},
  author = {Buchanan, David},
  date = {2022-02-09T10:08:29Z},
  origdate = {2021-03-16T21:51:19Z},
  url = {https://github.com/DavidBuchanan314/tweetable-polyglot-png},
  urldate = {2022-02-09},
  abstract = {Pack up to 3MB of data into a tweetable PNG polyglot file.},
  keywords = {png,polyglot,polyglot-files,steganography,twitter,zip}
}

@article{carzanigaContentBasedAddressingRouting,
  title = {Content-{{Based Addressing}} and {{Routing}}: {{A General Model}} and Its {{Application}}},
  author = {Carzaniga, Antonio and Rosenblum, David S and Wolf, Alexander L},
  pages = {15},
  abstract = {The designers of communication networks are being challenged by the emergence of a new class of addressing and routing scheme referred to as content-based addressing and routing. This new approach differs from traditional unicast and multicast schemes in that it performs routing based on the data being transported in a message rather than on any specialized addressing and routing information attached to, or otherwise associated with, the message. An example of an application for content-based addressing and routing is an event notification service, which is a general-purpose facility for asynchronously and implicitly conveying information from generators of events to any and all parties expressing interest in those events. In order to implement content-based addressing and routing, we can adopt well-known and successful network architectures and protocols, provided that we understand how to map the core concepts and functionalities of content-based addressing and routing onto this established infrastructure. Toward that end, we have formulated a general, yet powerful model of addressing and routing that allows us to formalize the crucial aspects of content-based addressing and routing in a surprisingly simple manner. Furthermore, it allows us to treat traditional unicast and multicast addressing and routing uniformly as instances of this more general model. This paper presents our model and demonstrates its utility by showing its application to the design of an existing event notification service.},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/PJLQAZU6/Carzaniga m. fl. - Content-Based Addressing and Routing A General Mo.pdf}
}

@thesis{choudharyIMPLEMENTATIONDETECTIONPREVENTION2020,
  title = {{{IMPLEMENTATION}}, {{DETECTION AND PREVENTION OF STEGOMALWARE}}},
  author = {Choudhary, Kaustubh},
  date = {2020-07-26},
  doi = {10.13140/RG.2.2.19870.97609},
  abstract = {The Stegomalware is a type of malware that uses Steganography to hinder detection.In this project various Image Steganography based attacks on Computer Systems and Smartphones are surveyed and studied. Hammertoss is one of the image based stegomalware which was studied and selected for implementation (four different implementations).It is a Firewall resistant extremely stealth Remote Access Trojan (RAT).Based on the above, various existing stego-malware prevention and detection techniques have been studied and new methods have been proposed. The new proposals related to stegomalware prevention includes, a Digital Signature based scheme for authenticated installation of applications and an Active Warden attacks based scheme on downloaded Stego-Images. The existing image based stegomalware detection techniques includes malware detection techniques and image steganalysis techniques. By combining these existing techniques, a category wise detection approach for each type of stegomalware is proposed. Also after studying several Steganalysis techniques, two new Spatial Domain Image Steganalysis techniques are proposed, implemented and analysed. The outcomes of this research project can provide vital insights for detection and prevention of such attacks and can significantly improve the state of our Cyber Security Preparedness.}
}

@article{chumanEncryptionThenCompressionSystemsUsing2019,
  title = {Encryption-{{Then-Compression Systems Using Grayscale-Based Image Encryption}} for {{JPEG Images}}},
  author = {Chuman, Tatsuya and Sirichotedumrong, Warit and Kiya, Hitoshi},
  date = {2019-06},
  journaltitle = {IEEE Transactions on Information Forensics and Security},
  volume = {14},
  number = {6},
  pages = {1515--1525},
  issn = {1556-6021},
  doi = {10.1109/TIFS.2018.2881677},
  abstract = {A block scrambling-based encryption scheme is presented to enhance the security of Encryption-then-Compression (EtC) systems with JPEG compression, which allow us to securely transmit the images through an untrusted channel provider, such as social network service providers. The proposed scheme enables the use of a smaller block size and a larger number of blocks than the conventional scheme. Images encrypted using the proposed scheme include less color information due to the use of grayscale images even when the original image has three color channels. These features enhance security against various attacks such as jigsaw puzzle solver and brute-force attacks. In an experiment, the security against jigsaw puzzle solver attacks is evaluated. Encrypted images were uploaded to and then downloaded from Facebook and Twitter, and the results demonstrated that the proposed scheme is effective for EtC systems.},
  eventtitle = {{{IEEE Transactions}} on {{Information Forensics}} and {{Security}}},
  keywords = {Encryption,EtC system,Image coding,Image color analysis,Image encryption,jigsaw puzzle,JPEG,Social network services,Transform coding},
  file = {/Users/glenn/Zotero/storage/ZJTJNFBD/Chuman m. fl. - 2019 - Encryption-Then-Compression Systems Using Grayscal.pdf;/Users/glenn/Zotero/storage/JBRQYZJP/8537968.html}
}

@online{CloudStorageWork,
  title = {Cloud Storage for Work and Home – Google Drive},
  url = {https://www.google.com/intl/sv/drive/},
  urldate = {2021-10-26},
  abstract = {Lagra och dela dina foton, videor, filer med mera på ett säkert sätt i molnet. Med ett Google-konto är dina första 15~GB lagringsutrymme gratis.},
  langid = {swedish},
  file = {/Users/glenn/Zotero/storage/CP67T93R/drive.html}
}

@online{cuingSIMARGLStegwarePrimer2020,
  title = {{{SIMARGL}}: {{Stegware}} Primer, Part 1},
  author = {CUING},
  date = {2020-02-14},
  url = {https://cuing.eu/blog/technical/simargl-stegware-primer-part-1},
  urldate = {2022-02-09},
  file = {/Users/glenn/Zotero/storage/5LYB2Y46/simargl-stegware-primer-part-1.html}
}

@online{DistributedStorageWhat,
  title = {Distributed {{Storage}}: {{What}}’s {{Inside Amazon S3}}?},
  shorttitle = {Distributed {{Storage}}},
  url = {https://cloudian.com/guides/data-backup/distributed-storage/},
  urldate = {2021-10-26},
  abstract = {Learn about the technology that powers massively scalable storage services like Amazon S3, and huge data pools in on-premise data centers.},
  langid = {american},
  organization = {{Cloudian}},
  file = {/Users/glenn/Zotero/storage/XKFPM9EL/distributed-storage.html}
}

@inproceedings{domingo-ferrerSharedSteganographicFile2008,
  title = {A {{Shared Steganographic File System}} with {{Error Correction}}},
  booktitle = {Modeling {{Decisions}} for {{Artificial Intelligence}}},
  author = {Domingo-Ferrer, Josep and Bras-Amorós, Maria},
  editor = {Torra, Vicenç and Narukawa, Yasuo},
  date = {2008},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {227--238},
  publisher = {{Springer}},
  location = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-540-88269-5_21},
  abstract = {Steganographic file systems are file systems where the location and even the existence of files are unknown to the users not having stored them. If the file system can be written to by several users, a user may inadvertently damage the files stored by other users. In this paper, solutions to the collision problem are proposed which rely on error-correcting codes. The storage efficiency and the privacy offered by the proposed protocols are analytically assessed.},
  isbn = {978-3-540-88269-5},
  langid = {english},
  keywords = {error-correcting codes,Information privacy and security,steganographic file systems},
  file = {/Users/glenn/Zotero/storage/SPAHLSH6/Domingo-Ferrer och Bras-Amorós - 2008 - A Shared Steganographic File System with Error Cor.pdf}
}

@online{FileAllocationSystem,
  title = {File {{Allocation System}} - {{NTFS}}.Com},
  url = {https://www.ntfs.com/fat-allocation.htm},
  urldate = {2021-11-30},
  keywords = {Thesis-Sem-Pres}
}

@online{FileSystemDesign,
  title = {File {{System Design}}},
  url = {http://web.cs.ucla.edu/classes/fall10/cs111/scribe/11a/},
  urldate = {2021-11-30},
  keywords = {Thesis-Sem-Pres},
  file = {/Users/glenn/Zotero/storage/KR95KEHT/11a.html}
}

@online{FiSTStackableFile,
  title = {{{FiST}}: {{Stackable File System Language}} and {{Templates}}},
  url = {https://www.filesystems.org/},
  urldate = {2022-02-02},
  file = {/Users/glenn/Zotero/storage/6AX2V2B8/www.filesystems.org.html}
}

@online{googleGoogleDrive,
  title = {Google {{Drive}}},
  author = {Google},
  url = {https://www.google.com/drive/},
  urldate = {2021-10-26}
}

@article{gurunathSocialMediaSteganography2021,
  title = {Social {{Media}} and {{Steganography}}: {{Use}}, {{Risks}} and {{Current Status}}},
  shorttitle = {Social {{Media}} and {{Steganography}}},
  author = {Gurunath, R. and Klaib, Mohammad Fadel Jamil and Samanta, Debabrata and Khan, Mohammad Zubair},
  date = {2021},
  journaltitle = {IEEE Access},
  volume = {9},
  pages = {153656--153665},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2021.3125128},
  abstract = {Steganography or data hiding is used to protect the privacy of information in the transit; it has been observed that the information that flows through Online Social Networks (OSN) is very much unsafe. Therefore, people hesitate to communicate their sensitive data on social media.. Most of the information on the online social network is not useful to users and appears to disregard such details. People’s actions provided a possibility for digital Steganography through the Internet.. TCPIP covert channels were used for steganography until the last decade. People began to utilize social media as a covert conduit to communicate hidden messages to targeted users as social media grew in popularity. There are numerous Online Social Networks accessible nowadays, ranging from Facebook to the more contemporary Twitter and Instagram. All of them may be utilized as covert channels without the general public noticing. The primary characteristic of steganography is the protection of information privacy; nonetheless, it has been utilized more for illicit message transmission, which is a source of concern. To make matters worse, adversaries are using steganalysis techniques to mess with the concealed data. In this article, we examine the different social media steganography techniques, such as those used on Facebook, WhatsApp, and Twitter, as well as the difficulties that these approaches raise. The positive and negative consequences of social media, as well as its current state, are discussed in this study. This paper discusses how the performances of Steganography methods may be assessed using the Entropy value of the Stego object. A look of the three features of steganography. It has been given with undetectability, robustness, and payload capacity. Finally, the paper’s concept’s future scope is explored.},
  eventtitle = {{{IEEE Access}}},
  keywords = {Blogs,cyber bullying,cyber stalking,Facebook,Freeware,Internet telephony,OSN,social media,Social networking (online),steganalysis,Steganography,Tools,Twitter,White spaces},
  file = {/Users/glenn/Zotero/storage/5JMDMP6A/Gurunath m. fl. - 2021 - Social Media and Steganography Use, Risks and Cur.pdf;/Users/glenn/Zotero/storage/YMD7ZNVK/9599677.html}
}

@inproceedings{hanMultiuserSteganographicFile2010,
  title = {A Multi-User Steganographic File System on Untrusted Shared Storage},
  booktitle = {Proceedings of the 26th {{Annual Computer Security Applications Conference}} on - {{ACSAC}} '10},
  author = {Han, Jin and Pan, Meng and Gao, Debin and Pang, HweeHwa},
  date = {2010},
  pages = {317},
  publisher = {{ACM Press}},
  location = {{Austin, Texas}},
  doi = {10.1145/1920261.1920309},
  url = {http://portal.acm.org/citation.cfm?doid=1920261.1920309},
  urldate = {2022-01-27},
  abstract = {Existing steganographic file systems enable a user to hide the existence of his secret data by claiming that they are (static) dummy data created during disk initialization. Such a claim is plausible if the adversary only sees the disk content at the point of attack. In a multi-user computing environment that employs untrusted shared storage, however, the adversary could have taken multiple snapshots of the disk content over time. Since the dummy data are static, the differences across snapshots thus disclose the locations of user data, and could even reveal the user passwords.},
  eventtitle = {The 26th {{Annual Computer Security Applications Conference}}},
  isbn = {978-1-4503-0133-6},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/KPIB9ZSM/Han m. fl. - 2010 - A multi-user steganographic file system on untrust.pdf}
}

@online{HomeMacFUSE,
  title = {Home - {{macFUSE}}},
  url = {https://osxfuse.github.io/},
  urldate = {2022-03-07},
  file = {/Users/glenn/Zotero/storage/3W6LL4FC/osxfuse.github.io.html}
}

@online{http://www.injosoft.seASCIICodeExtended,
  title = {{{ASCII Code}} - {{The}} Extended {{ASCII}} Table},
  author = {{http://www.injosoft.se}, Injosoft AB},
  url = {https://www.ascii-code.com/},
  urldate = {2021-10-27},
  abstract = {The following ASCII table with hex, octal, html, binary and decimal chart conversion contains both the ASCII control characters, ASCII printable characters and the extended ASCII character set Windows-1252.},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/7X374N26/www.ascii-code.com.html}
}

@inproceedings{iidaImageIdentificationGrayscaleBased2019,
  title = {Image {{Identification}} of {{Grayscale-Based JPEG Images}} for {{Privacy-Preserving Photo Sharing Services}}},
  booktitle = {2019 {{Asia-Pacific Signal}} and {{Information Processing Association Annual Summit}} and {{Conference}} ({{APSIPA ASC}})},
  author = {Iida, Kenta and Kiya, Hitoshi},
  date = {2019-11},
  pages = {1750--1755},
  issn = {2640-0103},
  doi = {10.1109/APSIPAASC47483.2019.9023356},
  abstract = {We propose an image identification scheme for double-compressed JPEG images encrypted by a grayscale-based encryption method, where the encrypted JPEG images are referred to as grayscale-based JPEG images, that has been proposed for Encryption-then-Compression (EtC) systems with JPEG compression. The proposed scheme aims to identify encrypted JPEG images that are generated from an original JPEG image. To store images without any visual sensitive information on photo sharing services, grayscale-based JPEG images are generated by using the grayscale-based encryption method. The use of the grayscale-based JPEG images and feature vectors extracted from the JPEG images allows us to identify images not only recompressed multiple times but re-encrypted with different keys. In an experiment, the proposed scheme is shown to have a high identification performance, even when images are recompressed multiple times and re-encrypted with different keys.},
  eventtitle = {2019 {{Asia-Pacific Signal}} and {{Information Processing Association Annual Summit}} and {{Conference}} ({{APSIPA ASC}})},
  keywords = {Encryption,Feature extraction,Image coding,Robustness,Transform coding,Transforms},
  file = {/Users/glenn/Zotero/storage/CPM4I468/Iida och Kiya - 2019 - Image Identification of Grayscale-Based JPEG Image.pdf;/Users/glenn/Zotero/storage/SRG3A5JJ/9023356.html}
}

@online{IozoneFilesystemBenchmark,
  title = {Iozone {{Filesystem Benchmark}}},
  url = {https://www.iozone.org/},
  urldate = {2022-03-07},
  file = {/Users/glenn/Zotero/storage/Q4QY6N5I/www.iozone.org.html}
}

@online{jonesGmailFilesystemImplementation2006,
  title = {Gmail {{Filesystem Implementation Overview}}},
  author = {Jones, Richard},
  date = {2006-04-11},
  url = {https://web.archive.org/web/20060411085901/http://richard.jones.name/google-hacks/gmail-filesystem/gmail-filesystem-implementation.html},
  urldate = {2022-03-09},
  file = {/Users/glenn/Zotero/storage/6LJVZF56/gmail-filesystem-implementation.html}
}

@online{jonesGoogleHackUse2006,
  title = {Google Hack: {{Use Gmail}} as a {{Linux}} Filesystem},
  shorttitle = {Google Hack},
  author = {Jones, Richard},
  date = {2006-09-15T01:00-05:00},
  url = {https://www.computerworld.com/article/2547891/google-hack--use-gmail-as-a-linux-filesystem.html},
  urldate = {2022-03-09},
  abstract = {Need some extra storage? This code lets you use a Gmail account as a 2GB networked filesystem.},
  langid = {english},
  organization = {{Computerworld}},
  file = {/Users/glenn/Zotero/storage/SHHT8EB8/google-hack--use-gmail-as-a-linux-filesystem.html}
}

@article{karimQualityServiceQoS2021,
  title = {Quality of Service ({{QoS}}): Measurements of Image Formats in Social Cloud Computing},
  shorttitle = {Quality of Service ({{QoS}})},
  author = {Karim, Sajida and He, Hui and Laghari, Asif Ali and Magsi, Arif Hussain and Laghari, Rashid Ali},
  date = {2021-01-01},
  journaltitle = {Multimedia Tools and Applications},
  shortjournal = {Multimed Tools Appl},
  volume = {80},
  number = {3},
  pages = {4507--4532},
  issn = {1573-7721},
  doi = {10.1007/s11042-020-09959-3},
  url = {https://doi.org/10.1007/s11042-020-09959-3},
  urldate = {2022-01-27},
  abstract = {With the development of multimedia and the popularity of social cloud (SC), Quality of Service (QoS) is used to measure the technical parameters of service delivery. QoS is mostly used for measuring various kinds of multimedia data. Sharing (uploading) on SC has become the daily activity of end-users. As a result of this activity, it provides an open challenge for service providers. As a service provider, the host delivers productive infrastructure, allowing end-users to upload and share their high-quality images. To evaluate the QoS of image compression, we conduct objective QoS techniques to measure the efficiency of image quality and QoS performance of service delivery via uploading /downloading of images on three popular SC, (Facebook, Twitter, and Instagram). These social clouds and image services are compared by the mean, standard deviation (STDEV),mean square error (MSE), and signal-to-noise ratio (SNR). So we can achieve better results about the SC image quality. The results show that Instagram and Facebook compressed images more as compared to Twitter. However, Twitter less supports image formats and provides an acceptable quality of compressed images as compared to others. Therefore, Facebook supports all image file formats and enhanced (QoE) levels of end-users, but Twitter provided the best QoS of compressed images as compared to Instagram. Further, we found that the decrease of MSE and increase of SNR both have a high impact on image resolutions as compared to original image parameters, which has a higher effect on quality. For the specific quality assurance of image tasks acquired for robust automated image analysis research, we are also using deep learning techniques (DLT) to classify the quality of images. We also have identified the opportunity to simplify the Convolutional Neural network (CNN) with smaller resampling grids and making this process more suitable for at least five thousand (5000) of the enormous datasets available in the future.},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/F9NKG52Q/Karim m. fl. - 2021 - Quality of service (QoS) measurements of image fo.pdf}
}

@inproceedings{kreitzSpotifyLargeScale2010,
  title = {Spotify -- {{Large Scale}}, {{Low Latency}}, {{P2P Music-on-Demand Streaming}}},
  booktitle = {2010 {{IEEE Tenth International Conference}} on {{Peer-to-Peer Computing}} ({{P2P}})},
  author = {Kreitz, G. and Niemela, F.},
  date = {2010-08},
  pages = {1--10},
  publisher = {{IEEE}},
  location = {{Delft, Netherlands}},
  doi = {10.1109/P2P.2010.5569963},
  url = {http://ieeexplore.ieee.org/document/5569963/},
  urldate = {2022-01-23},
  abstract = {Spotify is a music streaming service offering lowlatency access to a library of over 8 million music tracks. Streaming is performed by a combination of client-server access and a peer-to-peer protocol. In this paper, we give an overview of the protocol and peer-to-peer architecture used and provide measurements of service performance and user behavior.},
  eventtitle = {2010 {{IEEE Tenth International Conference}} on {{Peer-to-Peer Computing}} ({{P2P}})},
  isbn = {978-1-4244-7140-9},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/YARGT2KB/Kreitz och Niemela - 2010 - Spotify -- Large Scale, Low Latency, P2P Music-on-.pdf}
}

@article{laghariAssessmentQualityExperience2018,
  title = {Assessment of Quality of Experience ({{QoE}}) of Image Compression in Social Cloud Computing},
  author = {Laghari, Asif Ali and He, Hui and Shafiq, Muhammad and Khan, Asiya},
  date = {2018-01-01},
  journaltitle = {Multiagent and Grid Systems},
  volume = {14},
  number = {2},
  pages = {125--143},
  publisher = {{IOS Press}},
  issn = {1574-1702},
  doi = {10.3233/MGS-180284},
  url = {https://content.iospress.com/articles/multiagent-and-grid-systems/mgs284},
  urldate = {2021-11-10},
  abstract = {Image posting and sharing on the social media clouds is a common activity of end users. During the uploading of an image, social media cloud automatically compresses the original image to reduce resolution and file size to save storage and provides s},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/2WVSSUXM/Laghari m. fl. - 2018 - Assessment of quality of experience (QoE) of image.pdf;/Users/glenn/Zotero/storage/Z26T3ISG/mgs284.html}
}

@software{Libfuse2021,
  title = {Libfuse},
  date = {2021-10-26T06:49:26Z},
  origdate = {2015-12-19T20:27:34Z},
  url = {https://github.com/libfuse/libfuse},
  urldate = {2021-10-26},
  abstract = {The reference implementation of the Linux FUSE (Filesystem in Userspace) interface},
  organization = {{libfuse}}
}

@article{mahajanStudyEncryptionAlgorithms2013,
  title = {A {{Study}} of {{Encryption Algorithms AES}}, {{DES}} and {{RSA}} for {{Security}}},
  author = {Mahajan, Prerna and Sachdeva, Abhishek},
  date = {2013-12-07},
  journaltitle = {Global Journal of Computer Science and Technology},
  issn = {0975-4172},
  url = {https://computerresearch.org/index.php/computer/article/view/272},
  urldate = {2022-02-07},
  langid = {american},
  file = {/Users/glenn/Zotero/storage/4ZWC8CNJ/Mahajan och Sachdeva - 2013 - A Study of Encryption Algorithms AES, DES and RSA .pdf}
}

@inproceedings{mcparlaneExploitingTwitterWikipedia2014,
  title = {Exploiting {{Twitter}} and {{Wikipedia}} for the Annotation of Event Images},
  booktitle = {Proceedings of the 37th International {{ACM SIGIR}} Conference on {{Research}} \& Development in Information Retrieval},
  author = {McParlane, Philip James and Jose, Joemon},
  date = {2014-07-03},
  series = {{{SIGIR}} '14},
  pages = {1175--1178},
  publisher = {{Association for Computing Machinery}},
  location = {{New York, NY, USA}},
  doi = {10.1145/2600428.2609538},
  url = {https://doi.org/10.1145/2600428.2609538},
  urldate = {2021-11-09},
  abstract = {With the rise in popularity of smart phones, there has been a recent increase in the number of images taken at large social (e.g. festivals) and world (e.g. natural disasters) events which are uploaded to image sharing websites such as Flickr. As with all online images, they are often poorly annotated, resulting in a difficult retrieval scenario. To overcome this problem, many photo tag recommendation methods have been introduced, however, these methods all rely on historical Flickr data which is often problematic for a number of reasons, including the time lag problem (i.e. in our collection, users upload images on average 50 days after taking them, meaning "training data" is often out of date). In this paper, we develop an image annotation model which exploits textual content from related Twitter and Wikipedia data which aims to overcome the discussed problems. The results of our experiments show and highlight the merits of exploiting social media data for annotating event images, where we are able to achieve recommendation accuracy comparable with a state-of-the-art model.},
  isbn = {978-1-4503-2257-7},
  keywords = {tag recommendation,twitter,wikipedia},
  file = {/Users/glenn/Zotero/storage/6JJXS4F4/McParlane och Jose - 2014 - Exploiting Twitter and Wikipedia for the annotatio.pdf}
}

@online{MediaBestPractices,
  title = {Media {{Best Practices}} - {{Twitter}}},
  url = {https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media/uploading-media/media-best-practices},
  urldate = {2021-10-26},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/7I9CA2XR/media-best-practices.html}
}

@online{mikbenFileSystemFunctionality,
  title = {File {{System Functionality Comparison}} - {{Win32}} Apps},
  author = {{mikben}},
  url = {https://docs.microsoft.com/en-us/windows/win32/fileio/filesystem-functionality-comparison},
  urldate = {2022-02-07},
  abstract = {Tables that list functionality and feature support comparisons for the four main Windows file systems, NTFS, exFAT, UDF, and FAT32.},
  langid = {american},
  file = {/Users/glenn/Zotero/storage/QLLJ8T5U/filesystem-functionality-comparison.html}
}

@online{MobileScaleLondona,
  title = {Mobile @{{Scale London}} Recap - {{Engineering}} at {{Meta}}},
  url = {https://engineering.fb.com/2016/03/29/android/mobile-scale-london-recap/}
}

@thesis{petersDEFYDeniableFile2014,
  title = {{{DEFY}}: {{A Deniable File System}} for {{Flash Memory}}},
  shorttitle = {{{DEFY}}},
  author = {Peters, Timothy M},
  date = {2014-06-01},
  institution = {{California Polytechnic State University}},
  location = {{San Luis Obispo, California}},
  doi = {10.15368/theses.2014.76},
  url = {http://digitalcommons.calpoly.edu/theses/1230},
  urldate = {2021-10-19},
  file = {/Users/glenn/Zotero/storage/TDSSV6K8/Peters - 2014 - DEFY A Deniable File System for Flash Memory.pdf}
}

@inproceedings{petersDEFYDeniableFile2014a,
  title = {{{DEFY}}: {{A Deniable File System}} for {{Flash Memory}}},
  shorttitle = {{{DEFY}}},
  booktitle = {Master's {{Theses}}},
  author = {Peters, Timothy},
  date = {2014-06-01},
  doi = {10.15368/theses.2014.76},
  url = {https://digitalcommons.calpoly.edu/theses/1230},
  file = {/Users/glenn/Zotero/storage/DINB3WSA/Peters - 2014 - DEFY A Deniable File System for Flash Memory.pdf;/Users/glenn/Zotero/storage/MPXEAWCA/1230.html}
}

@online{PNGSpecificationFile,
  title = {{{PNG Specification}}: {{File Structure}}},
  url = {http://www.libpng.org/pub/png/spec/1.2/PNG-Structure.html},
  urldate = {2021-12-12},
  keywords = {PNG Spec}
}

@online{PortableNetworkGraphics,
  title = {Portable {{Network Graphics}} ({{PNG}}) {{Specification}} ({{Second Edition}})},
  url = {https://www.w3.org/TR/2003/REC-PNG-20031110/},
  urldate = {2021-11-10},
  file = {/Users/glenn/Zotero/storage/QBII8HPM/REC-PNG-20031110.html}
}

@online{robinsonObjectStorageFuse2021,
  title = {Object {{Storage}} via {{Fuse Filesystems}}},
  author = {Robinson, Joshua},
  date = {2021-09-14T10:06:08},
  url = {https://joshua-robinson.medium.com/object-storage-via-fuse-filesystems-ea2cc8094e2c},
  urldate = {2022-02-17},
  abstract = {Cloud-native applications must often co-exist with legacy applications. Those legacy applications are hardened and just work, so rewriting…},
  langid = {english},
  organization = {{Medium}},
  file = {/Users/glenn/Zotero/storage/T2QAIN3A/object-storage-via-fuse-filesystems-ea2cc8094e2c.html}
}

@online{salterUnderstandingLinuxFilesystems2018,
  title = {Understanding {{Linux}} Filesystems: Ext4 and Beyond},
  shorttitle = {Understanding {{Linux}} Filesystems},
  author = {Salter, Jim},
  date = {2018-04-02},
  url = {https://opensource.com/article/18/4/ext4-filesystem},
  urldate = {2022-03-09},
  abstract = {The majority of modern Linux distributions default to the ext4 filesystem, just as previous Linux distributions defaulted to ext3, ext2, and—if you go back far enough—ext. If you're new to Linux—or to filesystems—you might wonder what ext4 brings to the table that ext3 didn't. You might also wonder whether ext4 is still in active development at all, given the flurries of news coverage of alternate filesystems such as btrfs, xfs, and zfs.},
  langid = {english},
  organization = {{Opensource.com}},
  file = {/Users/glenn/Zotero/storage/AXG3XAM6/ext4-filesystem.html}
}

@article{sirichotedumrongGrayscalebasedBlockScrambling2019,
  title = {Grayscale-Based Block Scrambling Image Encryption Using {{YCbCr}} Color Space for Encryption-Then-Compression Systems},
  author = {Sirichotedumrong, Warit and Kiya, Hitoshi},
  year = {2019/ed},
  journaltitle = {APSIPA Transactions on Signal and Information Processing},
  volume = {8},
  publisher = {{Cambridge University Press}},
  issn = {2048-7703},
  doi = {10.1017/ATSIP.2018.33},
  url = {https://www.cambridge.org/core/journals/apsipa-transactions-on-signal-and-information-processing/article/grayscalebased-block-scrambling-image-encryption-using-ycbcr-color-space-for-encryptionthencompression-systems/6BD82605355EFE42DBBDEC5FFB1AEE2E},
  urldate = {2021-11-10},
  abstract = {A novel grayscale-based block scrambling image encryption scheme is presented not only to enhance security, but also to improve the compression performance for Encryption-then-Compression (EtC) systems with JPEG compression, which are used to securely transmit images through an untrusted channel provider. The proposed scheme enables the use of a smaller block size and a larger number of blocks than the color-based image encryption scheme. Images encrypted using the proposed scheme include less color information due to the use of grayscale images even when the original image has three color channels. These features enhance security against various attacks, such as jigsaw puzzle solver and brute-force attacks. Moreover, generating the grayscale-based images from a full-color image in YCbCr color space allows the use of color sub-sampling operation, which can provide the higher compression performance than the conventional grayscale-based encryption scheme, although the encrypted images have no color information. In an experiment, encrypted images were uploaded to and then downloaded from Twitter and Facebook, and the results demonstrated that the proposed scheme is effective for EtC systems and enhances the compression performance, while maintaining the security against brute-force and jigsaw puzzle solver attacks.},
  langid = {english},
  keywords = {EtC system,Image encryption,Jigsaw puzzle,JPEG},
  file = {/Users/glenn/Zotero/storage/WL83E9V5/Sirichotedumrong och Kiya - 2019 - Grayscale-based block scrambling image encryption .pdf}
}

@unpublished{sosaSuperSecretFile2007,
  title = {The {{Super Secret File System}}},
  author = {Sosa, Chris and Sutton, Blake and Huang, Howie},
  date = {2007},
  url = {https://www.cs.virginia.edu/~evans/wass/projects/ssfs.pdf},
  urldate = {2022-03-09},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/V2N3YBXY/Sosa m. fl. - The Super Secret File System.pdf}
}

@online{SpotifyRemovesPeerToPeer,
  title = {Spotify {{Removes Peer-To-Peer Technology From Its Desktop Client}}},
  url = {https://social.techcrunch.com/2014/04/17/spotify-removes-peer-to-peer-technology-from-its-desktop-client/},
  urldate = {2022-01-23},
  abstract = {Music streaming startup Spotify is shutting down its peer-to-peer network that powered a significant part of the service in the desktop app. According to TorrentFreak, the company doesn’t need to use peer-to-peer anymore as it has enough servers spread around the world. As a reminder, the mob…},
  langid = {american},
  organization = {{TechCrunch}}
}

@online{SpotifyRemovesPeerToPeera,
  title = {Spotify {{Removes Peer-To-Peer Technology From Its Desktop Client}}},
  url = {https://social.techcrunch.com/2014/04/17/spotify-removes-peer-to-peer-technology-from-its-desktop-client/},
  urldate = {2022-01-23},
  abstract = {Music streaming startup Spotify is shutting down its peer-to-peer network that powered a significant part of the service in the desktop app. According to TorrentFreak, the company doesn’t need to use peer-to-peer anymore as it has enough servers spread around the world. As a reminder, the mob…},
  langid = {american},
  organization = {{TechCrunch}},
  file = {/Users/glenn/Zotero/storage/6A9JZNED/spotify-removes-peer-to-peer-technology-from-its-desktop-client.html}
}

@inproceedings{sreelakshmiBidirectionalDiffusionBased2020,
  title = {A {{Bidirectional Diffusion Based Image Encryption Scheme}} for {{Color Images}}},
  booktitle = {2020 7th {{International Conference}} on {{Smart Structures}} and {{Systems}} ({{ICSSS}})},
  author = {Sreelakshmi, K. and Ravi, Renjith V.},
  date = {2020-07},
  pages = {1--6},
  doi = {10.1109/ICSSS49621.2020.9202070},
  abstract = {The goal of this work is to develop an encryption scheme for secure transmission for colour images over untrusted channel. A bidirectional diffusion based encryption technique for 8-bit RGB colour image is performed. The encryption process is used to protect the image in transit. Also the encryption steps will be conducted using a fixed block size of 8 × 8 which will enhance the robustness against cipher text only attacks. The performance analysis of encryption scheme is conducted using various tests and observed that the proposed algorithm is robust against various cryptanalytic attacks.},
  eventtitle = {2020 7th {{International Conference}} on {{Smart Structures}} and {{Systems}} ({{ICSSS}})},
  keywords = {bidirectional diffusion,Block scrambling,Color,Encryption,Histograms,image cryptography,image encryption,image inversion,image rotation,Manganese,Robustness},
  file = {/Users/glenn/Zotero/storage/XCL36GKI/Sreelakshmi och Ravi - 2020 - A Bidirectional Diffusion Based Image Encryption S.pdf;/Users/glenn/Zotero/storage/9PRSJK7L/9202070.html}
}

@online{TwitterImagesCan,
  title = {Twitter Images Can Be Abused to Hide {{ZIP}}, {{MP3}} Files — Here's How},
  url = {https://www.bleepingcomputer.com/news/security/twitter-images-can-be-abused-to-hide-zip-mp3-files-heres-how/},
  urldate = {2022-02-09},
  abstract = {Yesterday, a researcher disclosed a method~of hiding~up to three~MB of data inside a Twitter~image. In his demonstration, the researcher showed both~MP3 audio files and ZIP archives contained within the PNG images hosted on Twitter.},
  file = {/Users/glenn/Zotero/storage/BNHWYMC6/amp.html}
}

@online{twitterMessageAttachments,
  type = {URL},
  title = {Message Attachments},
  author = {Twitter},
  url = {https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/message-attachments/guides/attaching-media},
  urldate = {2021-10-26}
}

@online{TwitterNowLets,
  title = {Twitter Now Lets You Create Tweetstorms before Tweeting},
  url = {https://thenextweb.com/news/twitter-now-lets-create-tweetstorms-tweeting},
  urldate = {2021-11-17}
}

@online{TwitterPrivacyPolicy,
  title = {Privacy {{Policy}}},
  url = {https://twitter.com/en/privacy},
  urldate = {2022-02-15},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/F9ATZ8KV/privacy.html}
}

@online{viksoeViksoeDkGMail2004,
  title = {Viksoe.Dk - {{GMail Drive}} Shell Extension},
  author = {Viksoe, Bjarke},
  date = {2004-04-10},
  url = {http://www.viksoe.dk/code/gmail.htm},
  urldate = {2022-03-09},
  file = {/Users/glenn/Zotero/storage/99DSF9JW/gmail.html}
}

@article{wangCompressionResistantSteganography2021,
  title = {A {{Compression Resistant Steganography Based}} on {{Differential Manchester Code}}},
  author = {Wang, Shuai and Zheng, Ning and Xu, Ming},
  date = {2021-02},
  journaltitle = {Symmetry},
  volume = {13},
  number = {2},
  pages = {165},
  publisher = {{Multidisciplinary Digital Publishing Institute}},
  issn = {2073-8994},
  doi = {10.3390/sym13020165},
  url = {https://www.mdpi.com/2073-8994/13/2/165},
  urldate = {2022-02-09},
  abstract = {In the field of image steganography research, more and more attention is paid to the importance of stego image robustness. In order to make steganography accessible from laboratory to practical applications, it becomes critical that the stego images can resist JPEG compression from transmission channel. In this paper, an image steganography algorithm with strong robustness to resist JPEG compression is proposed. First, the robust cover elements are selected using the sign of DCT coefficients which are kept constant before and after JPEG compression. Additionally, a distortion function and a weighted cost adjustment method are designed to assign an appropriate cost to each candidate DCT coefficient. Finally, the message is embedded in the cover image which has minimal embedding distortion by flipping the signs of DCT coefficients, while differential Manchester code is applied to the element positions to obtain the location feature. Compared with the prior art, our algorithm has better undetectability and stronger robustness, and it can resist the attacks from the social network platforms such as Facebook, Twitter, and WeChat.},
  issue = {2},
  langid = {english},
  keywords = {differential Manchester code,JPEG compression,robust steganography,sign of DCT coefficients},
  file = {/Users/glenn/Zotero/storage/9H6IHKKI/Wang m. fl. - 2021 - A Compression Resistant Steganography Based on Dif.pdf;/Users/glenn/Zotero/storage/JGLZWEK2/165.html}
}

@article{zadokCryptfsStackableVnode,
  title = {Cryptfs: {{A Stackable Vnode Level Encryption File System}}},
  author = {Zadok, Erez and Badulescu, Ion and Shender, Alex},
  pages = {14},
  abstract = {Data encryption has become an increasingly important factor in everyday work. Users seek a method of securing their data with maximum comfort and minimum additional requirements on their part; they want a security system that protects any files used by any of their applications, without resorting to application-specific encryption methods. Performance is an important factor to users since encryption can be time consuming. Operating system vendors want to provide this functionality but without incurring the large costs of developing a new file system.},
  langid = {english},
  file = {/Users/glenn/Zotero/storage/LT3CNSR3/Zadok m. fl. - Cryptfs A Stackable Vnode Level Encryption File S.pdf}
}


